using Anthill.EulerProblems.Interfaces;
using System;
using System.Collections.Generic;
using System.Numerics;
using System.Text;

namespace Anthill.EulerProblems
{
    public class FibonacciOddEvenDigitSum : IProblemDescriber, IProblemCalculator, IProblemDigitAggregator, IProblemResultFormatter
    {
        private int Number { get; set; }

        public FibonacciOddEvenDigitSum(int number)
        {
            this.Number = number;
        }

        public BigInteger Calculate()
        {
            return 0;
        }

        public static string Describe()
        {
            StringBuilder builder = new StringBuilder();
            builder.AppendLine("");
            builder.AppendLine("Even fibonacci numbers");
            builder.AppendLine("");
            builder.AppendLine("Each new term in the Fibonacci sequence is generated by adding the previous two terms.By starting with 1 and 2, the first 10 terms will be:");
            builder.AppendLine("");
            builder.AppendLine("1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...");
            builder.AppendLine("");
            builder.AppendLine("By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.");
            builder.AppendLine("");
            builder.AppendLine("Lets give it a try!");
            return builder.ToString();
        }

        public string FormatOutputResults()
        {
            return String.Empty;
        }

        public BigInteger Sum()
        {
            return 0;
        }
    }
}
